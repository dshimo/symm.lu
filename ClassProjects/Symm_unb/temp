
    // var1
    for (irep=0; irep<nrepeats; ++irep ){
      /* Copy vector yold to y */
      FLA_Copy( Cold, Cobj );

      /* start clock */
      dtime = FLA_Clock();

      Symm_lu_blk_var1( Aobj, Bobj, Cobj );

      /* stop clock */
      dtime = FLA_Clock() - dtime;

      if ( irep == 0 )
    dtime_best = dtime;
      else
    dtime_best = ( dtime < dtime_best ? dtime : dtime_best );
    }

    diff = FLA_Max_elemwise_diff( Cobj, Cref );

    printf( "data_blk_var1( %d, 1:3 ) = [ %d %le %le];\n", i, n,
	    dtime_best, diff  );

    fflush( stdout );		  
	  
    // var2
    for (irep=0; irep<nrepeats; ++irep ){
      /* Copy vector yold to y */
      FLA_Copy( Cold, Cobj );

      /* start clock */
      dtime = FLA_Clock();

      Symm_lu_blk_var2( Aobj, Bobj, Cobj );

      /* stop clock */
      dtime = FLA_Clock() - dtime;

      if ( irep == 0 )
    dtime_best = dtime;
      else
    dtime_best = ( dtime < dtime_best ? dtime : dtime_best );
    }

    diff = FLA_Max_elemwise_diff( Cobj, Cref );

    printf( "data_blk_var2( %d, 1:3 ) = [ %d %le %le];\n", i, n,
	    dtime_best, diff  );

    fflush( stdout );	  

    // var3
    for (irep=0; irep<nrepeats; ++irep ){
      /* Copy vector yold to y */
      FLA_Copy( Cold, Cobj );

      /* start clock */
      dtime = FLA_Clock();

      Symm_lu_blk_var3( Aobj, Bobj, Cobj );

      /* stop clock */
      dtime = FLA_Clock() - dtime;

      if ( irep == 0 )
    dtime_best = dtime;
      else
    dtime_best = ( dtime < dtime_best ? dtime : dtime_best );
    }

    diff = FLA_Max_elemwise_diff( Cobj, Cref );

    printf( "data_blk_var3( %d, 1:3 ) = [ %d %le %le];\n", i, n,
	    dtime_best, diff  );

    fflush( stdout );
	  
    // var4
    for (irep=0; irep<nrepeats; ++irep ){
      /* Copy vector yold to y */
      FLA_Copy( Cold, Cobj );

      /* start clock */
      dtime = FLA_Clock();

      Symm_lu_blk_var4( Aobj, Bobj, Cobj );

      /* stop clock */
      dtime = FLA_Clock() - dtime;

      if ( irep == 0 )
    dtime_best = dtime;
      else
    dtime_best = ( dtime < dtime_best ? dtime : dtime_best );
    }

    diff = FLA_Max_elemwise_diff( Cobj, Cref );

    printf( "data_blk_var4( %d, 1:3 ) = [ %d %le %le];\n", i, n,
	    dtime_best, diff  );

    fflush( stdout );	  
	  
    // var5
    for (irep=0; irep<nrepeats; ++irep ){
      /* Copy vector yold to y */
      FLA_Copy( Cold, Cobj );

      /* start clock */
      dtime = FLA_Clock();

      Symm_lu_blk_var5( Aobj, Bobj, Cobj );

      /* stop clock */
      dtime = FLA_Clock() - dtime;

      if ( irep == 0 )
    dtime_best = dtime;
      else
    dtime_best = ( dtime < dtime_best ? dtime : dtime_best );
    }

    diff = FLA_Max_elemwise_diff( Cobj, Cref );

    printf( "data_blk_var5( %d, 1:3 ) = [ %d %le %le];\n", i, n,
	    dtime_best, diff  );

    fflush( stdout );
	  
	  
    // var6
    for (irep=0; irep<nrepeats; ++irep ){
      /* Copy vector yold to y */
      FLA_Copy( Cold, Cobj );

      /* start clock */
      dtime = FLA_Clock();

      Symm_lu_blk_var6( Aobj, Bobj, Cobj );

      /* stop clock */
      dtime = FLA_Clock() - dtime;

      if ( irep == 0 )
    dtime_best = dtime;
      else
    dtime_best = ( dtime < dtime_best ? dtime : dtime_best );
    }

    diff = FLA_Max_elemwise_diff( Cobj, Cref );

    printf( "data_blk_var6( %d, 1:3 ) = [ %d %le %le];\n", i, n,
	    dtime_best, diff  );

    fflush( stdout );
	  
    //done with blk variations

